{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/modal-dialog/modal-dialog.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/modal-dialog/modal-dialog.component.css","./src/app/auth/modal-dialog/modal-dialog.component.ts","./src/app/auth/signup/signup.component.css","./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0/B;;;;;;;;;;;ACAA,2BAA2B,MAAM,S;;;;;;;;;;;ACAjC,g9CAAg9C,gBAAgB,oE;;;;;;;;;;;;;;;;;;;;ACAv7C;AACc;AAEE;AACG;AAE5D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;CAC/C;AAQD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AAApB,iBAAiB;IAN7B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACjBW;AACM;AACmB;AAET;AACG;AACO;AACT;AAKmB;AAiB7E,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IAftB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,qEAAc,EAAE,wEAAe,EAAE,yFAAoB,CAAC;QACrE,OAAO,EAAE;YACP,4DAAY;YACZ,8EAAqB;YACrB,0DAAW;YACX,kEAAmB;YACnB,sEAAiB;SAGlB;QACD,eAAe,EAAE;YACf,yFAAoB;SACrB;KACF,CAAC;GACW,UAAU,CAAG;AAAH;;;;;;;;;;;;AC7BvB,kCAAkC,gBAAgB,GAAG,iBAAiB,iBAAiB,GAAG,oBAAoB,sBAAsB,oBAAoB,GAAG,0BAA0B,+BAA+B,oBAAoB,GAAG,+CAA+C,2pB;;;;;;;;;;;;;;;;;;;;;;;;ACA7N;AACO;AAGtB;AACV;AACqC;AACd;AAEb;AACgC;AAM9E,IAAa,cAAc,GAA3B,MAAa,cAAc;IAOzB,YACS,WAAwB,EACvB,KAA0B,EAC3B,MAAiB;QAFjB,gBAAW,GAAX,WAAW,CAAa;QACvB,UAAK,GAAL,KAAK,CAAqB;QAC3B,WAAM,GAAN,MAAM,CAAW;QAL1B,cAAS,GAAG,KAAK,CAAC;QAOhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wEAAe,CAAC,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAY,EAAE,EAAE;YACvC,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,KAAK,CAAC,YAAY,EAAE;oBACtB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;wBACvD,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,KAAK,CAAC,YAAY;qBACzB,CAAC,CAAC;oBAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;wBACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACvC,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACzB,OAAO;SACR;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,MAAM,OAAO,GAAG;YACd,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ;SACvC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1C,CAAC;CACF;;YAxCuB,yDAAW;YAChB,iDAAK;YACL,2DAAS;;AAVf,cAAc;IAJ1B,+DAAS,CAAC;QACT,sJAAqC;;KAEtC,CAAC;GACW,cAAc,CAgD1B;AAhD0B;;;;;;;;;;;;AChB3B,+DAA+D,mK;;;;;;;;;;;;;;;;;;ACAL;AACQ;AAOlE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAE/B,YACS,SAA6C,EACpB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAK;IACxC,CAAC;IAEJ,QAAQ;IACR,CAAC;CAEF;;YAPqB,8DAAY;4CAC7B,oDAAM,SAAC,iEAAe;;AAJd,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,2KAA4C;;KAE7C,CAAC;IAKG,6GAAM,CAAC,iEAAe,CAAC;GAJf,oBAAoB,CAUhC;AAVgC;;;;;;;;;;;;ACRjC,kCAAkC,gBAAgB,GAAG,iBAAiB,iBAAiB,GAAG,+CAA+C,+X;;;;;;;;;;;;;;;;;;;;;;;;ACAvF;AACuB;AAErC;AAEU;AAC2B;AACb;AAEQ;AAMpE,IAAa,eAAe,GAA5B,MAAa,eAAe;IAa1B,YACS,WAAwB,EACvB,KAA0B;QAD3B,gBAAW,GAAX,WAAW,CAAa;QACvB,UAAK,GAAL,KAAK,CAAqB;QAdpC,cAAS,GAAG,KAAK,CAAC;QAMlB,aAAQ,GAAG,IAAI,wDAAS,CAAC;YACvB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;QAMD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wEAAe,CAAC,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAY,EAAE,EAAE;YACvC,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAC5C,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CACvB,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC;iBACpC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpB,IAAI,QAAQ,CAAC,cAAc,EAAE;oBAC3B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;iBAC3D;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;iBAChD;gBACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,EAAE,CAAC;YACxD,CAAC,CAAC;QACN,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACzB,OAAO;SACR;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,MAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI;YAC9B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ;SACvC,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yEAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3C,CAAC;CACF;;YAzCuB,yDAAW;YAChB,iDAAK;;AAfX,eAAe;IAJ3B,+DAAS,CAAC;QACT,yJAAsC;;KAEvC,CAAC;GACW,eAAe,CAuD3B;AAvD2B;AAyDrB,SAAS,aAAa,CAAC,OAAwB;IACpD,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;IAAA,CAAC;AAC/B,CAAC","file":"auth-auth-module-es2015.js","sourcesContent":["module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onLogin()\\\" [formGroup]=\\\"authForm\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field>\\n      <input matInput \\n             name=\\\"email\\\" \\n             formControlName=\\\"email\\\"\\n             type=\\\"email\\\" \\n             placeholder=\\\"E-Mail\\\"\\n             email>\\n      <mat-error *ngIf=\\\"authForm.controls.email.invalid\\\">Please enter a valid email.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input type=\\\"password\\\" \\n             name=\\\"password\\\" \\n             formControlName=\\\"password\\\"\\n             matInput \\n             placeholder=\\\"Password\\\">\\n      <mat-error *ngIf=\\\"authForm.controls.password.invalid\\\">Please enter a valid password.</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Login</button>\\n    <span class=\\\"forgot-button\\\" routerLink=\\\"/forgot\\\">Forgot password?</span>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"<p>\\n  {{data}}\\n</p>\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onSignup()\\\" [formGroup]=\\\"authForm\\\" *ngIf=\\\"!isLoading\\\">\\n      <mat-form-field>\\n          <input matInput \\n                 name=\\\"nickname\\\" \\n                 type=\\\"email\\\"\\n                  placeholder=\\\"Your name\\\" \\n                  formControlName=\\\"name\\\" \\n                  required>\\n        </mat-form-field>\\n    <mat-form-field>\\n      <input matInput \\n             name=\\\"email\\\"\\n             type=\\\"email\\\" \\n             placeholder=\\\"E-Mail\\\" \\n             formControlName=\\\"email\\\" \\n             required \\n             email>\\n      <mat-error *ngIf=\\\"authForm.controls.email.invalid && !authForm.controls.email?.errors?.validEmail\\\">Please enter a valid email.</mat-error>\\n      <mat-error *ngIf=\\\"authForm.controls.email?.errors?.validEmail\\\">This email is already taken. Choose another one</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input type=\\\"password\\\" \\n             name=\\\"password\\\"\\n             matInput \\n             placeholder=\\\"Password\\\"\\n             formControlName=\\\"password\\\"\\n             required>\\n      <mat-error *ngIf=\\\"authForm.controls.password.invalid\\\">Please enter a valid password.</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"authForm.invalid\\\" *ngIf=\\\"!isLoading\\\">Signup</button>\\n  </form>\\n  <!-- <p *ngIf=\\\"errorMessage\\\"> {{ errorMessage }}</p> -->\\n  <!-- <button > Sign up again </button> -->\\n</mat-card>\"","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { LoginComponent } from \"./login/login.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignupComponent },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { LoginComponent } from \"./login/login.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { AngularMaterialModule } from \"../angular-material.module\";\nimport { AuthRoutingModule } from \"./auth-routing.module\";\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './store/effects/auth.effects';\nimport { reducers } from '../store/app.states';\nimport { ModalDialogComponent } from './modal-dialog/modal-dialog.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, ModalDialogComponent],\n  imports: [\n    CommonModule, \n    AngularMaterialModule, \n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    // StoreModule.forRoot(reducers, {}),\n    // EffectsModule.forRoot([AuthEffects]),\n  ],\n  entryComponents: [\n    ModalDialogComponent\n  ]\n})\nexport class AuthModule {}\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\\n.forgot-button {\\n  margin-left: 20px;\\n  font-size: 12px;\\n}\\n\\n.forgot-button:hover {\\n  text-decoration: underline;\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1zcGlubmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uZm9yZ290LWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5mb3Jnb3QtYnV0dG9uOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Subscription, Observable } from \"rxjs\";\n\nimport { AuthService } from \"../auth.service\";\nimport { Store } from '@ngrx/store';\nimport { AppAuthState, selectAuthState } from 'src/app/store/app.states';\nimport { LogIn } from 'src/app/store/actions/auth.actions';\nimport { State } from 'src/app/store/reducers/auth.reducers';\nimport { MatDialog } from '@angular/material';\nimport { ModalDialogComponent } from '../modal-dialog/modal-dialog.component';\n\n@Component({\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  \n  authForm: FormGroup;\n  getState: Observable<any>;\n\n  isLoading = false;\n\n  constructor(\n    public authService: AuthService,\n    private store: Store<AppAuthState>,\n    public dialog: MatDialog\n  ) {\n    this.getState = this.store.select(selectAuthState);\n  }\n\n  ngOnInit() {\n    this.getState.subscribe((state: State) => {\n      if (state) {\n        this.isLoading = false;\n        if (state.errorMessage) {\n          const dialogRef = this.dialog.open(ModalDialogComponent, {\n            width: '400px',\n            data: state.errorMessage\n          });\n      \n          dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n          });\n        }\n      }\n    })\n    this.authForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n\n  onLogin() {\n    if (this.authForm.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    const payload = {\n      email: this.authForm.value.email,\n      password: this.authForm.value.password\n    };\n    this.store.dispatch(new LogIn(payload));\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbW9kYWwtZGlhbG9nL21vZGFsLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-modal-dialog',\n  templateUrl: './modal-dialog.component.html',\n  styleUrls: ['./modal-dialog.component.css']\n})\nexport class ModalDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1zcGlubmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, AbstractControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { Store } from '@ngrx/store';\n\nimport { AuthService } from \"../auth.service\";\nimport { AppAuthState, selectAuthState } from 'src/app/store/app.states';\nimport { SignUp } from 'src/app/store/actions/auth.actions';\nimport { State } from 'src/app/store/reducers/auth.reducers';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit {\n  isLoading = false;\n\n  errorMessage: string;\n\n  getState: Observable<any>;\n\n  authForm = new FormGroup({\n    name: new FormControl(''),\n    email: new FormControl(''),\n    password: new FormControl(''),\n  });\n\n  constructor(\n    public authService: AuthService,\n    private store: Store<AppAuthState>\n  ) {\n    this.getState = this.store.select(selectAuthState);\n  }\n\n  ngOnInit() {\n    this.getState.subscribe((state: State) => {\n      if (state) {\n        this.isLoading = false;\n      }\n    })\n    this.authForm.controls.email.valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe((value: string) => {\n      this.authService.checkValidEmail(value)\n        .subscribe(response => {        \n          if (response.isAlreadyExist) {\n            this.authForm.controls.email.setValidators(ErrorValidate);\n          } else {\n            this.authForm.controls.email.clearValidators();\n          }\n          this.authForm.controls.email.updateValueAndValidity();\n        })\n    })\n  }\n\n  onSignup() {\n    if (this.authForm.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    const payload = {\n      name: this.authForm.value.name,\n      email: this.authForm.value.email,\n      password: this.authForm.value.password\n    };\n    \n    this.store.dispatch(new SignUp(payload));\n  }\n}\n\nexport function ErrorValidate(control: AbstractControl) {\n  return { validEmail: true };;\n}\n"],"sourceRoot":""}